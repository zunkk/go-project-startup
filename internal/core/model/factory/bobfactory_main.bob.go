// Code generated by BobGen psql v0.38.0. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

import "context"

type Factory struct {
	baseUserMods     UserModSlice
	baseUserAuthMods UserAuthModSlice
}

func New() *Factory {
	return &Factory{}
}

func (f *Factory) NewUser(ctx context.Context, mods ...UserMod) *UserTemplate {
	o := &UserTemplate{f: f}

	if f != nil {
		f.baseUserMods.Apply(ctx, o)
	}

	UserModSlice(mods).Apply(ctx, o)

	return o
}

func (f *Factory) NewUserAuth(ctx context.Context, mods ...UserAuthMod) *UserAuthTemplate {
	o := &UserAuthTemplate{f: f}

	if f != nil {
		f.baseUserAuthMods.Apply(ctx, o)
	}

	UserAuthModSlice(mods).Apply(ctx, o)

	return o
}

func (f *Factory) ClearBaseUserMods() {
	f.baseUserMods = nil
}

func (f *Factory) AddBaseUserMod(mods ...UserMod) {
	f.baseUserMods = append(f.baseUserMods, mods...)
}

func (f *Factory) ClearBaseUserAuthMods() {
	f.baseUserAuthMods = nil
}

func (f *Factory) AddBaseUserAuthMod(mods ...UserAuthMod) {
	f.baseUserAuthMods = append(f.baseUserAuthMods, mods...)
}
